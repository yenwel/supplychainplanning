Forecast.Example.Data <- read.csv("C:/Users/Jan/Downloads/Forecast-Example-Data.csv", sep="")
View(Forecast.Example.Data)
rep(length(Forecast.Example.Data))
rep(nrow(Forecast.Example.Data))
rep(0,nrow(Forecast.Example.Data))
source('~/supplychainforecasting/script.R')
Forecast.Example.Data$NaiveForecast[1:length(Forecast.Example.Data)]
Forecast.Example.Data$NaiveForecast[,1:length(Forecast.Example.Data)]
1:length(Forecast.Example.Data)
1:nrow(Forecast.Example.Data)
Forecast.Example.Data$NaiveForecast[,1:nrow(Forecast.Example.Data)]
Forecast.Example.Data$NaiveForecast[1:nrow(Forecast.Example.Data)]
Forecast.Example.Data$Demand[1:nrow(Forecast.Example.Data)]
Forecast.Example.Data$Demand[2:nrow(Forecast.Example.Data)]
c(0,Forecast.Example.Data$Demand[2:nrow(Forecast.Example.Data)])
1:nrow(Forecast.Example.Data)-1
c(0,Forecast.Example.Data$Demand[1:nrow(Forecast.Example.Data)-1])
source('~/supplychainforecasting/script.R')
View(Forecast.Example.Data)
seq_along(Forecast.Example.Data$Demand)
cumsum(Forecast.Example.Data$Demand) / seq_along(Forecast.Example.Data$Demand)
(cumsum(Forecast.Example.Data$Demand) / seq_along(Forecast.Example.Data$Demand))[1:nrow(Forecast.Example.Data)-1]
source('~/supplychainforecasting/script.R')
Supply.Chain.Planning.Quiz.Data <- read.csv("C:/Users/Jan/Downloads/Supply-Chain-Planning-Quiz-Data.csv")
View(Supply.Chain.Planning.Quiz.Data)
source('~/supplychainforecasting/script.R')
naive(Forecast.Example.Data$Demand)
cumean <- function(x){c(NA,(cumsum(x) / seq_along(x))[1:length(x)-1])}
cumean(Forecast.Example.Data$Demand)
apply(Supply.Chain.Planning.Quiz.Data,2,naive)
source('~/supplychainforecasting/script.R')
View(Supply.Chain.Planning.Quiz.Data.cumean)
View(Supply.Chain.Planning.Quiz.Data.naive)
View(Supply.Chain.Planning.Quiz.Data.cumean)
source('~/supplychainforecasting/script.R')
View(Supply.Chain.Planning.Quiz.Data.cumean)
View(Supply.Chain.Planning.Quiz.Data.cumean)
View(Supply.Chain.Planning.Quiz.Data.naive)
Forecast.Example.Data.MovingAverages <- read.csv("C:/Users/Jan/Downloads/Forecast-Example-Data-MovingAverages.csv", sep="")
View(Forecast.Example.Data.MovingAverages)
source('~/supplychainforecasting/script.R')
movmean <- function(x,k){filter(x,rep(1/k,k)}
movmean <- function(x,k){filter(x,rep(1/k,k))}
View(Forecast.Example.Data.MovingAverages)
movmean(Forecast.Example.Data.MovingAverages,3)
round(movmean(Forecast.Example.Data.MovingAverages,)3)
round(movmean(Forecast.Example.Data.MovingAverages,3))
round(movmean(Forecast.Example.Data.MovingAverages,5))
round(movmean(Forecast.Example.Data.MovingAverages,5))
round(movmean(Forecast.Example.Data.MovingAverages,3))
source('~/supplychainforecasting/script.R')
movmean <- movingAverage <- function(x, n=1, centered=FALSE) {
if (centered) {
before <- floor  ((n-1)/2)
after  <- ceiling((n-1)/2)
} else {
before <- n-1
after  <- 0
}
# Track the sum and count of number of non-NA items
s     <- rep(0, length(x))
count <- rep(0, length(x))
# Add the centered data
new <- x
# Add to count list wherever there isn't a
count <- count + !is.na(new)
# Now replace NA_s with 0_s and add to total
new[is.na(new)] <- 0
s <- s + new
# Add the data from before
i <- 1
while (i <= before) {
# This is the vector with offset values to add
new   <- c(rep(NA, i), x[1:(length(x)-i)])
count <- count + !is.na(new)
new[is.na(new)] <- 0
s <- s + new
i <- i+1
}
# Add the data from after
i <- 1
while (i <= after) {
# This is the vector with offset values to add
new   <- c(x[(i+1):length(x)], rep(NA, i))
count <- count + !is.na(new)
new[is.na(new)] <- 0
s <- s + new
i <- i+1
}
# return sum divided by count
s/count
}
movmean(Forecast.Example.Data.MovingAverages,5)
movmean <-  function(x,n=5){filter(x,rep(1/n,n), sides=2)}
round(movmean(Forecast.Example.Data.MovingAverages,5))
movmean <-  function(x,n=5){filter(x,rep(1/n,n), sides=1)}
round(movmean(Forecast.Example.Data.MovingAverages,5))
round(movmean(Forecast.Example.Data.MovingAverages,3))
round(movmean(Forecast.Example.Data.MovingAverages,5))
MSE <-function(x,y){x-y}
source('~/supplychainforecasting/script.R')
MSE <-function(x,y){x-y}
ma3 <- round(movmean(Forecast.Example.Data.MovingAverages,3))
ma5 <- round(movmean(Forecast.Example.Data.MovingAverages,5))
MSE(Forecast.Example.Data.MovingAverages,ma5)
MSE(Forecast.Example.Data.MovingAverages,as.vector(ma5))
MSE <-function(x,y){(x-y)**2}
source('~/supplychainforecasting/script.R')
MSE(Forecast.Example.Data.MovingAverages,ma5)
MSE <-function(x,y){mean((x-y)**2,na.rm=T))}
source('~/supplychainforecasting/script.R')
source('~/supplychainforecasting/script.R')
source('~/supplychainforecasting/script.R')
MSE(Forecast.Example.Data.MovingAverages,ma5)
ma3
ound(movmean(Forecast.Example.Data.MovingAverages,4))
round(movmean(Forecast.Example.Data.MovingAverages,4))
movmean <-  function(x,n=5){c(NA,as.vector(filter(x,rep(1/n,n), sides=1)))}
ma3 <- round(movmean(Forecast.Example.Data.MovingAverages,4))
ma5 <- round(movmean(Forecast.Example.Data.MovingAverages,5))
MSE <-function(x,y){mean((x-y)**2,na.rm=T)}
MSE(Forecast.Example.Data.MovingAverages,ma5)
MSE(Forecast.Example.Data.MovingAverages,ma3)
ma3 <- round(movmean(Forecast.Example.Data.MovingAverages,4))
ma3
source('~/supplychainforecasting/script.R')
MSE(Forecast.Example.Data.MovingAverages,ma3)
ma3 <- round(movmean(Forecast.Example.Data.MovingAverages,3))
ma3
MSE(Forecast.Example.Data.MovingAverages,ma3)
MSE(Forecast.Example.Data.MovingAverages,ma5)
source('~/supplychainforecasting/script.R')
ma5
MSE(Forecast.Example.Data.MovingAverages,ma3)
MSE <-function(x,y){(x-y)**2}
SE <-function(x,y){(x-y)**2}
SE(Forecast.Example.Data.MovingAverages,ma3)
SE(Forecast.Example.Data.MovingAverages,ma3),na.rm=T)
mean(SE(Forecast.Example.Data.MovingAverages,ma3),na.rm=T)
SE(Forecast.Example.Data.MovingAverages,ma3)
Supply.Chain.Planning.Quiz.Data.MovingAverages <- read.csv("C:/Users/Jan/Downloads/Supply-Chain-Planning-Quiz-Data-MovingAverages.csv")
View(Supply.Chain.Planning.Quiz.Data.MovingAverages)
source('~/supplychainforecasting/script.R')
source('~/supplychainforecasting/script.R')
mean(AE(Forecast.Example.Data.MovingAverages,ma3),na.rm=T)
APE <-function(x,y){(x-y)/y}
APE(Forecast.Example.Data.MovingAverages,ma3)
APE <-function(x,y){abs((x-y)/y)}
APE(Forecast.Example.Data.MovingAverages,ma3)
mean(APE(Forecast.Example.Data.MovingAverages,ma3))
mean(APE(Forecast.Example.Data.MovingAverages,ma3),na.rm=T)
APE(Forecast.Example.Data.MovingAverages,ma3)
source('~/supplychainforecasting/script.R')
source('~/supplychainforecasting/script.R')
SE(Forecast.Example.Data.MovingAverages,ma3)
APE(Forecast.Example.Data.MovingAverages,ma3)
source('~/supplychainforecasting/script.R')
APE(Forecast.Example.Data.MovingAverages,ma3)
source('~/supplychainforecasting/script.R')
APE(Forecast.Example.Data.MovingAverages,ma3)
APE <-function(x,y){abs((x-y)/y)[1]}
APE(Forecast.Example.Data.MovingAverages,ma3)
mean(APE(Forecast.Example.Data.MovingAverages,ma3))
dim(PE(Forecast.Example.Data.MovingAverages,ma3))
dim(APE(Forecast.Example.Data.MovingAverages,ma3))
APE <-function(x,y){abs((x-y)/y)[1,]}
dim(APE(Forecast.Example.Data.MovingAverages,ma3))
APE(Forecast.Example.Data.MovingAverages,ma3)
APE <-function(x,y){abs((x-y)/y)[,1]}
APE(Forecast.Example.Data.MovingAverages,ma3)
mean(APE(Forecast.Example.Data.MovingAverages,ma3))
mean(APE(Forecast.Example.Data.MovingAverages,ma3),na.rm=T)
mean(E(Forecast.Example.Data.MovingAverages,ma3),na.rm=T)
E(Forecast.Example.Data.MovingAverages,ma3)
source('~/supplychainforecasting/script.R')
E(Forecast.Example.Data.MovingAverages,ma3)
mean(E(Forecast.Example.Data.MovingAverages,ma3),na.rm=T)
Forecast.Example.Data.accuracy <- read.csv("C:/Users/Jan/Downloads/Forecast-Example-Data-accuracy.csv", sep="")
View(Forecast.Example.Data.accuracy)
source('~/supplychainforecasting/script.R')
cumean(Forecast.Example.Data$Demand)
naive(Forecast.Example.Data$Demand)
source('~/supplychainforecasting/script.R')
Supply.Chain.Planning.Quiz.Data.accuracy <- read.csv("C:/Users/Jan/Downloads/Supply-Chain-Planning-Quiz-Data-accuracy.csv")
View(Supply.Chain.Planning.Quiz.Data.accuracy)
source('~/supplychainforecasting/script.R')
source('~/supplychainforecasting/script.R')
Supply.Chain.Planning.Quiz.Data = Supply.Chain.Planning.Quiz.Data.accuracy
source('~/supplychainforecasting/script.R')
Supply.Chain.Planning.Quiz.Data == Supply.Chain.Planning.Quiz.Data.accuracy
source('~/supplychainforecasting/script.R')
Supply.Chain.Planning.Quiz.Data - Supply.Chain.Planning.Quiz.Data.cumean
E(Supply.Chain.Planning.Quiz.Data ,  Supply.Chain.Planning.Quiz.Data.cumean)
E <- function(x,y){(x-y)} #bias
E(Supply.Chain.Planning.Quiz.Data ,  Supply.Chain.Planning.Quiz.Data.cumean)
source('~/supplychainforecasting/script.R')
APE(Supply.Chain.Planning.Quiz.Data ,  Supply.Chain.Planning.Quiz.Data.cumean)
apply(SE(Supply.Chain.Planning.Quiz.Data ,  Supply.Chain.Planning.Quiz.Data.cumean),2,mean,na.rm=T)
apply(APE(Supply.Chain.Planning.Quiz.Data ,  Supply.Chain.Planning.Quiz.Data.cumean),2,mean,na.rm=T)
source('~/supplychainforecasting/script.R')
source('~/supplychainforecasting/script.R')
